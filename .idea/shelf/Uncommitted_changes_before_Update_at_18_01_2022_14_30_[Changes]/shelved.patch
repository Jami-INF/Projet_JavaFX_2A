Index: project/src/controller/actionClavier.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.geometry.BoundingBox;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.stage.Stage;\r\nimport model.Entite;\r\nimport model.Joueur;\r\nimport model.Plateforme;\r\n\r\npublic class actionClavier {\r\n\r\n    private ArrayList<String> input;\r\n\r\n    public actionClavier() {\r\n        input = new ArrayList<String>();\r\n    }\r\n\r\n    public ArrayList<String> getInput() {\r\n        return input;\r\n    }\r\n\r\n    public void addInput(String s) {\r\n        input.add(s);\r\n    }\r\n\r\n    public void removeInput(String s) {\r\n\r\n        input.remove(s);\r\n    }\r\n\r\n    public void clearInput() {\r\n        for (String in : input) {\r\n            input.remove(in);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Fonction qui permet de gerer les actions du clavier\r\n     * @param action\r\n     * @param j1\r\n     * @param stage\r\n     * @param entites\r\n     * @return\r\n     */\r\n    public Boolean ActionLectureListe(actionClavier action, Joueur j1, Stage stage, ArrayList<Entite> entites) {\r\n        if (action.getInput().contains(\"LEFT\")) {\r\n            j1.mouvementarriereX();\r\n\r\n        } else if (action.getInput().contains(\"RIGHT\")) {\r\n            j1.mouvementavantX();\r\n            //System.out.println(\"mouvement avant\");\r\n\r\n        } else if (action.getInput().contains(\"UP\")) {\r\n            j1.saut();\r\n\r\n        } else if (action.getInput().contains(\"ESCAPE\")) {\r\n            stage.close();\r\n            Parent root = null;\r\n            try {\r\n                root = (Parent) FXMLLoader.load(getClass().getClassLoader().getResource(\"fxml/accueil.fxml\"));\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            Scene scene = new Scene(root, 900, 520);\r\n            stage.setScene(scene);\r\n\r\n            return false;\r\n        } else\r\n            j1.arretmouvement();\r\n\r\n        return true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project/src/controller/actionClavier.java b/project/src/controller/actionClavier.java
--- a/project/src/controller/actionClavier.java	(revision 5868aee56acf3142bb919762e58f6fb17d2e7905)
+++ b/project/src/controller/actionClavier.java	(date 1642350375184)
@@ -54,7 +54,7 @@
 
         } else if (action.getInput().contains("RIGHT")) {
             j1.mouvementavantX();
-            //System.out.println("mouvement avant");
+            System.out.println("mouvement avant");
 
         } else if (action.getInput().contains("UP")) {
             j1.saut();
Index: project/src/controller/collision.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.geometry.BoundingBox;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.stage.Stage;\r\nimport model.Entite;\r\nimport model.Joueur;\r\nimport model.Plateforme;\r\n\r\npublic class collision{\r\n\r\n    public void verify(ArrayList<Plateforme> p, Joueur j1){\r\n        checkCollisionHautBas(p, j1); //Fonction v√©rifiant collision haut-bas\r\n        checkCollisionDroiteGauche(p, j1);\r\n    }\r\n    private void checkCollisionHautBas(ArrayList<Plateforme> plateformeList, Joueur j1){\r\n        //////////////Bounding box Joueur + points max\r\n        ImageView jIV = j1.getIV();\r\n        double WidthJ =  jIV.getImage().getWidth();\r\n        double HeightJ = jIV.getImage().getHeight();\r\n        BoundingBox joueurBound = new BoundingBox(jIV.getX(), jIV.getY(), WidthJ, HeightJ);//BoundingBox Joueur\r\n        double BasJ = joueurBound.getMaxY();\r\n        double HautJ = joueurBound.getMinY();\r\n        double GaucheJ = joueurBound.getMinX();\r\n        double DroiteJ = joueurBound.getMaxX();\r\n        //////////////\r\n\r\n        //////////////Bounding box plateforme + verification collisions avec chaque plateformes\r\n        for(Plateforme p : plateformeList){\r\n            ImageView pIV = p.getIV();\r\n            double WidthP =  pIV.getImage().getWidth();\r\n            double HeightP = pIV.getImage().getHeight();\r\n            BoundingBox platformBound = new BoundingBox(pIV.getX(), pIV.getY(), WidthP, HeightP);//BoundingBox Platform\r\n            double BasP = platformBound.getMaxY();\r\n            double HautP = platformBound.getMinY();\r\n            double GaucheP = platformBound.getMinX();\r\n            double DroiteP = platformBound.getMaxX();\r\n            //////////////\r\n            //COLLISION TETE Y\r\n            if(HautP >= BasJ && HautJ >= BasP && GaucheJ <= DroiteP && DroiteJ >= GaucheP){\r\n                j1.setiscollideUp(true);\r\n                j1.setCanJump(false);\r\n                System.out.println(\"collision tete\");\r\n            }\r\n\r\n            //COLLISION SOL\r\n            if(BasJ >= HautP && BasP >= HautJ && GaucheJ <= DroiteP && DroiteJ >= GaucheP){\r\n                j1.setiscollideDown(true);\r\n                j1.setCanJump(true);\r\n                System.out.println(\"collision sol\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private void checkCollisionDroiteGauche(ArrayList<Plateforme> plateformeList, Joueur j1){\r\n        //////////////Bounding box Joueur + points max\r\n        ImageView jIV = j1.getIV();\r\n        double WidthJ =  jIV.getImage().getWidth();\r\n        double HeightJ = jIV.getImage().getHeight();\r\n        BoundingBox joueurBound = new BoundingBox(jIV.getX(), jIV.getY(), WidthJ, HeightJ);//BoundingBox Joueur\r\n        double BasJ = joueurBound.getMaxY();\r\n        double HautJ = joueurBound.getMinY();\r\n        double GaucheJ = joueurBound.getMinX();\r\n        double DroiteJ = joueurBound.getMaxX();\r\n        //////////////\r\n\r\n        //////////////Bounding box plateforme + verification collisions avec chaque plateformes\r\n        for(Plateforme p : plateformeList){\r\n            ImageView pIV = p.getIV();\r\n            double WidthP =  pIV.getImage().getWidth();\r\n            double HeightP = pIV.getImage().getHeight();\r\n            BoundingBox platformBound = new BoundingBox(pIV.getX(), pIV.getY(), WidthP, HeightP);//BoundingBox Platform\r\n            double BasP = platformBound.getMaxY();\r\n            double HautP = platformBound.getMinY();\r\n            double GaucheP = platformBound.getMinX();\r\n            double DroiteP = platformBound.getMaxX();\r\n            //////////////\r\n            // COLLISION PAR LA GAUCHE X\r\n            if(GaucheJ >= DroiteP && HautP <= HautJ && BasP >= BasJ){\r\n                j1.setiscollideLeft(true);\r\n                System.out.println(\"collision gauche\");\r\n            }\r\n\r\n            //COLLISION PAR LA DROITE X\r\n            if(DroiteJ >= GaucheP && HautJ <= HautP && BasJ >= BasP){\r\n                j1.setiscollideDown(true);\r\n                System.out.println(\"collision droite\");\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project/src/controller/collision.java b/project/src/controller/collision.java
--- a/project/src/controller/collision.java	(revision 5868aee56acf3142bb919762e58f6fb17d2e7905)
+++ b/project/src/controller/collision.java	(date 1642350452719)
@@ -52,7 +52,7 @@
             if(BasJ >= HautP && BasP >= HautJ && GaucheJ <= DroiteP && DroiteJ >= GaucheP){
                 j1.setiscollideDown(true);
                 j1.setCanJump(true);
-                System.out.println("collision sol");
+                //System.out.println("collision sol");
             }
         }
     }
